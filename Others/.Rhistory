ov2.calculateFalseRate(Type2)
is.numer(NaN)
is.number(NaN)
is.numeric(NaN)
is.nan(Nan)
is.nan(NaN)
!is.nan(NaN)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov2.calculateFalseRate(Type2)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov2.calculateFalseRate(Type2)
library(readr)
KAIROS_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_DISTANCE_RESULTS.csv")
View(KAIROS_DISTANCE_RESULTS)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
counts <- table(ov1.countAccuracy(KAIROS_DISTANCE_RESULTS), ov1.countFalseSuccesRate(KAIROS_DISTANCE_RESULTS))
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
ov1.countAccuracy(KAIROS_DISTANCE_RESULTS)
ov1.countFalseSuccesRate(KAIROS_DISTANCE_RESULTS)
counts
counts <- table(ov1.countAccuracy(KAIROS_DISTANCE_RESULTS), 32)
ov1.countFalseSuccesRate(KAIROS_DISTANCE_RESULTS)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(KAIROS_DISTANCE_RESULTS$recognized, 32)
counts <- table(KAIROS_DISTANCE_RESULTS$recognized, 32)
library(ggplot2)
head(KAIROS_DISTANCE_RESULTS)
ov1.countAccuracy(KAIROS_DISTANCE_RESULTS)
ov1.countFalseSuccesRate(KAIROS_DISTANCE_RESULTS)
1
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov1.countResults(KAIROS_DISTANCE_RESULTS)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov1.countResults(KAIROS_DISTANCE_RESULTS)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov1.countResults(KAIROS_DISTANCE_RESULTS)
library(readr)
KAIROS_ATTRIBUTES2_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_ATTRIBUTES2_RESULTS.csv")
View(KAIROS_ATTRIBUTES2_RESULTS)
ov1.countResults(KAIROS_ATTRIBUTES2_RESULTS)
library(readr)
KAIROS_ATTRIBUTES_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_ATTRIBUTES_RESULTS.csv")
View(KAIROS_ATTRIBUTES_RESULTS)
ov1.countResults(KAIROS_ATTRIBUTES1_RESULTS)
ov1.countResults(KAIROS_ATTRIBUTES_RESULTS)
library(readr)
KAIROS_DARKER_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_DARKER_RESULTS.csv")
View(KAIROS_DARKER_RESULTS)
ov1.countResults(KAIROS_DARKER_RESULTS)
library(readr)
KAIROS_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_DISTANCE_RESULTS.csv")
View(KAIROS_DISTANCE_RESULTS)
ov1.countResults(KAIROS_DISTANCE_RESULTS)
library(readr)
KAIROS_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_NORMAL_RESULTS.csv")
View(KAIROS_NORMAL_RESULTS)
ov1.countResults(KAIROS_NORMAL_RESULTS)
library(readr)
KAIROS_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_SIDE_RESULTS.csv")
View(KAIROS_SIDE_RESULTS)
ov1.countResults(KAIROS_SIDE_RESULTS)
library(readr)
KAIROS_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/KAIROSFINAL/KAIROS_TIME_RESULTS.csv")
View(KAIROS_TIME_RESULTS)
ov1.countResults(KAIROS_TIME_RESULTS)
View(KAIROS_NORMAL_RESULTS)
library(readr)
FACEPP_ATTRIBUTES2_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_ATTRIBUTES2_RESULTS.csv")
View(FACEPP_ATTRIBUTES2_RESULTS)
ov1.countResults(FACEPP_ATTRIBUTES2_RESULTS)
library(readr)
FACEPP_ATTRIBUTES_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_ATTRIBUTES_RESULTS.csv")
View(FACEPP_ATTRIBUTES_RESULTS)
ov1.countResults(FACEPP_ATTRIBUTES_RESULTS)
library(readr)
FACEPP_DARKER_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_DARKER_RESULTS.csv")
View(FACEPP_DARKER_RESULTS)
ov1.countResults(FACEPP_DARKER_RESULTS)
library(readr)
FACEPP_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_DISTANCE_RESULTS.csv")
View(FACEPP_DISTANCE_RESULTS)
ov1.countResults(FACEPP_DISTANCE_RESULTS)
library(readr)
FACEPP_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_NORMAL_RESULTS.csv")
View(FACEPP_NORMAL_RESULTS)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov1.countResultsFacePP(FACEPP_ATTRIBUTES2_RESULTS)
ov1.countResultsFacePP(FACEPP_ATTRIBUTES_RESULTS)
ov1.countResultsFacePP(FACEPP_DARKER_RESULTS)
ov1.countResultsFacePP(FACEPP_DISTANCE_RESULTS
)
library(readr)
FACEPP_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_NORMAL_RESULTS.csv")
View(FACEPP_NORMAL_RESULTS)
library(readr)
FACEPP_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_SIDE_RESULTS.csv")
View(FACEPP_SIDE_RESULTS)
library(readr)
FACEPP_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/FACEPPFINAL/FACEPP_TIME_RESULTS.csv")
View(FACEPP_TIME_RESULTS)
ov1.countResultsFacePP(FACEPP_NORMAL_RESULTS)
ov1.countResultsFacePP(FACEPP_SIDE_RESULTS)
ov1.countResultsFacePP(FACEPP_TIME_RESULTS)
library(readr)
MICROSOFT_ATTRIBUTES2_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_ATTRIBUTES2_RESULTS.csv")
View(MICROSOFT_ATTRIBUTES2_RESULTS)
library(readr)
MICROSOFT_ATTRIBUTES_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_ATTRIBUTES_RESULTS.csv")
View(MICROSOFT_ATTRIBUTES_RESULTS)
library(readr)
MICROSOFT_DARKER_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_DARKER_RESULTS.csv")
View(MICROSOFT_DARKER_RESULTS)
library(readr)
MICROSOFT_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_DISTANCE_RESULTS.csv")
View(MICROSOFT_DISTANCE_RESULTS)
library(readr)
MICROSOFT_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_NORMAL_RESULTS.csv")
View(MICROSOFT_NORMAL_RESULTS)
library(readr)
MICROSOFT_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_SIDE_RESULTS.csv")
View(MICROSOFT_SIDE_RESULTS)
library(readr)
MICROSOFT_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTFINAL/MICROSOFT_TIME_RESULTS.csv")
View(MICROSOFT_TIME_RESULTS)
ov1.countResults(MICROSOFT_ATTRIBUTES2_RESULTS)
ov1.countResults(MICROSOFT_ATTRIBUTES_RESULTS)
ov1.countResults(MICROSOFT_DARKER_RESULTS)
ov1.countResults(MICROSOFT_DISTANCE_RESULTS)
ov1.countResults(MICROSOFT_NORMAL_RESULTS)
ov1.countResults(MICROSOFT_SIDE_RESULTS)
ov1.countResults(MICROSOFT_TIME_RESULTS)
library(readr)
MICROSOFTTRAINED_ATTRIBUTES2_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_ATTRIBUTES2_RESULTS.csv")
View(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS)
library(readr)
MICROSOFTTRAINED_ATTRIBUTES_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_ATTRIBUTES_RESULTS.csv")
View(MICROSOFTTRAINED_ATTRIBUTES_RESULTS)
library(readr)
MICROSOFTTRAINED_DARKER_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_DARKER_RESULTS.csv")
View(MICROSOFTTRAINED_DARKER_RESULTS)
library(readr)
MICROSOFTTRAINED_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_NORMAL_RESULTS.csv")
View(MICROSOFTTRAINED_NORMAL_RESULTS)
library(readr)
MICROSOFTTRAINED_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_SIDE_RESULTS.csv")
View(MICROSOFTTRAINED_SIDE_RESULTS)
library(readr)
MICROSOFTTRAINED_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_TIME_RESULTS.csv")
View(MICROSOFTTRAINED_TIME_RESULTS)
ov1.countResults(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS)
ov1.countResults(MICROSOFTTRAINED_ATTRIBUTES_RESULTS)
ov1.countResults(MICROSOFTTRAINED_DARKER_RESULTS)
library(readr)
MICROSOFTTRAINED_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_DISTANCE_RESULTS.csv")
View(MICROSOFTTRAINED_DISTANCE_RESULTS)
ov1.countResults(MICROSOFTTRAINED_DISTANCE_RESULTS0
exit
ov1.countResults(MICROSOFTTRAINED_DISTANCE_RESULTS)
ov1.countResults(MICROSOFTTRAINED_NORMAL_RESULTS)
ov1.countResults(MICROSOFTTRAINED_SIDE_RESULTS)
ov1.countResults(MICROSOFTTRAINED_TIME_RESULTS)
library(readr)
SKYBIOMETRY_ATTRIBUTES2_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_ATTRIBUTES2_RESULTS.csv")
View(SKYBIOMETRY_ATTRIBUTES2_RESULTS)
library(readr)
SKYBIOMETRY_ATTRIBUTES_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_ATTRIBUTES_RESULTS.csv")
View(SKYBIOMETRY_ATTRIBUTES_RESULTS)
library(readr)
SKYBIOMETRY_DARKER_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_DARKER_RESULTS.csv")
View(SKYBIOMETRY_DARKER_RESULTS)
library(readr)
SKYBIOMETRY_DISTANCE_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_DISTANCE_RESULTS.csv")
View(SKYBIOMETRY_DISTANCE_RESULTS)
library(readr)
SKYBIOMETRY_NORMAL_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_NORMAL_RESULTS.csv")
View(SKYBIOMETRY_NORMAL_RESULTS)
library(readr)
SKYBIOMETRY_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_SIDE_RESULTS.csv")
View(SKYBIOMETRY_SIDE_RESULTS)
library(readr)
SKYBIOMETRY_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/SKYBIOMETRYFINAL/SKYBIOMETRY_TIME_RESULTS.csv")
View(SKYBIOMETRY_TIME_RESULTS)
ov1.countResults(SKYBIOMETRY_ATTRIBUTES2_RESULTS)
ov1.countResults(SKYBIOMETRY_ATTRIBUTES_RESULTS)
ov1.countResults(SKYBIOMETRY_DARKER_RESULTS
)
ov1.countResults(SKYBIOMETRY_DISTANCE_RESULTS)
ov1.countResults(SKYBIOMETRY_NORMAL_RESULTS)
ov1.countResults(SKYBIOMETRY_SIDE_RESULTS)
ov1.countResults(SKYBIOMETRY_TIME_RESULTS)
mean((0/33),(8/22),0,(0),(1/36),(3/36),(3/30))
8/22
mean(c((0/33),(8/22),0,(0),(1/36),(3/36),(3/30)))
mean(c(1,11/19,1,12/13,5/8,7/11))
mean(c(0,8/19,0,0,1/13,3/8,3/11))
13/28
13/41
13/41
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,67.57L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde slaagpercentages per type", ylab = "Slaagpercentage (in %)", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,67.57L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde accuraatheid per type", ylab = "Accuraatheid (in %)", xlab="API\'s", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'))
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours)
colours
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours)
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,67.57L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde slaagpercentages per type", ylab = "Slaagpercentage (in %)", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours)
colours
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours, lty=1:2, cex=0.8)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours, lty=1:2, cex=1)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours, lty=1, cex=1)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours, lty=1, cex=1, fill=topo.colors(3))
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours,  cex=1, fill=topo.colors(3))
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours,  cex=1, fill=topo.colors(7))
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours,  cex=1, fill=colours)
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,67.57L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde accuraatheid per type", ylab = "Accuraatheid (in %)", xlab="API\'s", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
legend(1,95,legend=c('Type achtergrond', 'Type schuin', 'Type zonnebril', 'Type hoofddeksel', 'Type random', 'Type donker', 'Type afstand'), col=colours,  cex=1, fill=colours)
27/(27+14)
28/(27+14)
ov1.countResults(SKYBIOMETRY_ATTRIBUTES_RESULTS
)
17/(17+2+20)
17/19
28/(28+11)
34/(34+2)
23/36
32/36
33/36
25/36
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,69.45L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde accuraatheid per type", ylab = "Accuraatheid (in %)", xlab="API\'s", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
28/36
40/41
data <- c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
data
mean(data)
data <- c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
mean(data)
SkyBiometry <- c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
face <- c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized))
mean(face)
kairos <- c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized))
kairos
mean(kairos)
microsoft <- c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized))
mean(microsoft)
microsoftTrained <- c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized))
microsoftTrained
mean(microsoftTrained)
data <- c(mean(face), mean(kairos), mean(microsoft), mean(microsoftTrained), mean(SkyBiometry))
bplt <- barplot(data, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
text(x=bplt, y=data, label=data, pos=2)
text(x=bplt, y=data, label=data, pos=1)
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=3)
text(x=bplt, y=data*100, label=data*100, pos=3)
text(x=bplt, y=round(data*100), label=round(data*100), pos=3)
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
text(x=bplt, y=round(data*100), label=round(data*100), pos=3)
text(x=bplt, y=round(data*100,2), label=round(data*100,2), pos=3)
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
text(x=bplt, y=round(data*100,2), label=round(data*100,2), pos=3)
text(x=bplt, y=round(data*100,2), label=round(data*100,2), pos=2)
text(x=bplt, y=round(data*100,2), label=round(data*100,2), pos=1)
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per API', xlab = "API's", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Face++","Kairos","Microsoft","Microsoft getraind", "SkyBiometry"), ylim = c(0,100))
text(x=bplt, y=round(data*100,2), label=round(data*100,2), pos=1)
total <- sum(97750,150,330,1770)
total
total <- sum(c(97750,150,330,1770))
total
total <- 97750 + 330 + 150 + 1770
total
(1770+97750)/total
1770/(1770+150)
1770/(1770+150+330)
1770/(1770+330)
data <- structure(list(Face=c(100L,95.12L,100L,97.30L,94.44L,100L,97.56L), Kairos=c(91.67L,53.67L,71.80L,81.08L,63.89L,77.78L,73.17L), Microsoft=c(97.22L,65.85L,84.61L,78.39L,88.89L,77.78L,82.93), MicrosoftG=c(97.22L,68.29L,82.05L,81.08L,91.67L,77.78L,85.37), SkyBiometry=c(100L,65.85L,51.28L,81.08L,94.44L,69.45L,90.24L)), .Names=c('Face++','Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), class="data.frame", row.names=c(NA, -7L))
barplot(as.matrix(data), main="Gemiddelde accuraatheid per type", ylab = "Accuraatheid (in %)", xlab="API\'s", cex.lab = 1.5, cex.main = 1.4, beside=TRUE, col=colours)
library(readr)
MICROSOFTTRAINED_TIME_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_TIME_RESULTS.csv")
View(MICROSOFTTRAINED_TIME_RESULTS)
library(readr)
MICROSOFTTRAINED_SIDE_RESULTS <- read_csv("Project_ImageRecognitionApis/MICROSOFTTRAINEDFINAL/MICROSOFTTRAINED_SIDE_RESULTS.csv")
View(MICROSOFTTRAINED_SIDE_RESULTS)
mean(FACEPP_ATTRIBUTES2_RESULTS$recognized)
mean(FACEPP_ATTRIBUTES_RESULTS$recognized)
mean(FACEPP_SIDE_RESULTS$recognized)
mean(FACEPP_NORMAL_RESULTS$recognized)
mean(FACEPP_TIME_RESULTS$recognized)
mean(FACEPP_DARKER_RESULTS$recognized)
mean(FACEPP_DISTANCE_RESULTS$recognized)
mean(KAIROS_ATTRIBUTES2_RESULTS$recognized)
mean(KAIROS_ATTRIBUTES_RESULTS$recognized)
mean(KAIROS_SIDE_RESULTS$recognized)
mean(KAIROS_NORMAL_RESULTS$recognized)
mean(KAIROS_TIME_RESULTS$recognized)
mean(KAIROS_DARKER_RESULTS$recognized)
mean(KAIROS_DISTANCE_RESULTS$recognized)
mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized)
mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized)
mean(MICROSOFT_NORMAL_RESULTS$recognized)
mean(MICROSOFT_SIDE_RESULTS$recognized)
mean(MICROSOFT_TIME_RESULTS$recognized)
mean(MICROSOFT_DARKER_RESULTS$recognized)
mean(MICROSOFT_DISTANCE_RESULTS$recognized)
mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized)
mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized)
mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized)
mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized)
mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)
mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized)
mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized)
mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized)
mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized)
mean(SKYBIOMETRY_NORMAL_RESULTS$recognized)
mean(SKYBIOMETRY_SIDE_RESULTS$recognized)
mean(SKYBIOMETRY_TIME_RESULTS$recognized
mean(SKYBIOMETRY_DARKER_RESULTS$recognized
mean(SKYBIOMETRY_TIME_RESULTS$recognized)
mean(SKYBIOMETRY_DARKER_RESULTS$recognized)
mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized)
mean(KAIROS_DARKER_RESULTS$recognized)
library(readr)
Type2 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type2.csv")
View(Type2)
library(readr)
Type3 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type3.csv")
View(Type3)
library(readr)
Type4 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type4.csv")
View(Type4)
library(readr)
Type5 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type5.csv")
View(Type5)
library(readr)
Type6 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type6.csv")
View(Type6)
library(readr)
Type7 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type7.csv")
View(Type7)
library(readr)
Type8 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type8.csv")
View(Type8)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov2.countResultsCombo(Type2)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
ov2.countResultsCombo(Type2)
library(readr)
Type2 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type2.csv")
View(Type2)
ov2.countResultsCombo(Type2)
ov2.countResultsCombo(Type3)
library(readr)
Type3 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type3.csv")
View(Type3)
ov2.countResultsCombo(Type3)
ov2.countResultsCombo(Type4)
library(readr)
Type4 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type4.csv")
View(Type4)
ov2.countResultsCombo(Type4)
library(readr)
Type5 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type5.csv")
View(Type5)
library(readr)
Type6 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type6.csv")
View(Type6)
library(readr)
Type7 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type7.csv")
View(Type7)
library(readr)
Type8 <- read_csv("Project_ImageRecognitionLibraries/KAROSDLIBOPENCV_RESULTS/Type8.csv")
View(Type8)
ov2.countResultsCombo(Type5)
ov2.countResultsCombo(Type6)
ov2.countResultsCombo(Type7)
ov2.countResultsCombo(Type8)
mean(c(mean(Type2$filtered),mean(Type3$filtered),mean(Type4$filtered),mean(Type5$filtered),mean(Type6$filtered),mean(Type7$filtered),mean(Type8$filtered)))
sd(c(mean(Type2$filtered),mean(Type3$filtered),mean(Type4$filtered),mean(Type5$filtered),mean(Type6$filtered),mean(Type7$filtered),mean(Type8$filtered)))
(9/(9+11+12+7))
(0+(6/(6+6+8)) + (11/(11+12+7)) + (2/(2+2+6)) +(6/(6+5+1)) + (8/(8+5+4)) + (9+(9+3+1)))/7
(0+(6/(6+6+8)) + (11/(11+12+7)) + (2/(2+2+6)) +(6/(6+5+1)) + (8/(8+5+4)) + (9+(9+3+1)))/7
6/(6+6+8)
(0+(6/(6+6+8)) + (11/(11+12+7)) + (2/(2+2+6)) +(6/(6+5+1)) + (8/(8+5+4)) + (9+(9+3+1)))
(0+(6/(6+6+8)) + (11/(11+12+7)) + (2/(2+2+6)) +(6/(6+5+1)) + (8/(8+5+4)) + (9+(9+3+1)))/8
(0+(6/(6+6+8)) + (11/(11+12+7)) + (2/(2+2+6)) +(6/(6+5+1)) + (8/(8+5+4)) + (9/(9+3+1)))/7
1+8+7+6+1+4+1
data <- c(84.12, 60.56)
bplt <- barplot(data * 100, main = 'Gemiddelde accuraatheid per library', xlab = "Libraries", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
data <- c(84.12, 60.56)
bplt <- barplot(data, main = 'Gemiddelde accuraatheid per library', xlab = "Libraries", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
data <- c(20.01, 36.14)
bplt <- barplot(data, main = 'Gemiddelde accuraatheid per library', xlab = "Libraries", ylab = "Gemiddelde accuraatheid (in %)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
data <- c(20.01, 36.14)
bplt <- barplot(data, main = 'Gemiddelde foutratio per library', xlab = "Libraries", ylab = "Gemiddelde foutraio (in %)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
resp1 <- ov1.meanResponseTimeWhenUrl2NotDetected(Type2)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
resp1 <- ov1.meanResponseTimeWhenUrl2NotDetected(Type2,Type3,Type4,Type5,Type6,Type7,Type8)
source('~/Documents/School/2017-2018/sem2/Bachelorproef/ov1Script.R')
resp1 <- ov1.meanResponseTimeWhenUrl2NotDetected(Type2,Type3,Type4,Type5,Type6,Type7,Type8)
library(readr)
Type2 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type2.csv")
View(Type2)
library(readr)
Type3 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type3.csv")
View(Type3)
library(readr)
Type4 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type4.csv")
View(Type4)
library(readr)
Type5 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type5.csv")
View(Type5)
library(readr)
Type6 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type6.csv")
View(Type6)
library(readr)
Type7 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type7.csv")
View(Type7)
library(readr)
Type8 <- read_csv("Project_ImageRecognitionLibraries/FACERECOGNITION_RESULTS/Type8.csv")
View(Type8)
resp2 <- ov1.meanResponseTimeWhenUrl2NotDetected(Type2,Type3,Type4,Type5,Type6,Type7,Type8)
resp1
resp2
data <- c(resp2, resp1)
bplt <- barplot(data, main = 'Gemiddelde responsetime per library', xlab = "Libraries", ylab = "Gemiddelde responsetime (in mms)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,100))
text(x=bplt, y=data, label=data, pos=1)
data <- c(resp2, resp1)
bplt <- barplot(data, main = 'Gemiddelde responsetime per library', xlab = "Libraries", ylab = "Gemiddelde responsetime (in mms)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"))
text(x=bplt, y=data, label=data, pos=1)
data <- c(resp2, resp1)
bplt <- barplot(data, main = 'Gemiddelde responsetime per library', xlab = "Libraries", ylab = "Gemiddelde responsetime (in mms)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,10000))
text(x=bplt, y=data, label=data, pos=1)
data <- c(round(resp2), round(resp1))
bplt <- barplot(data, main = 'Gemiddelde responsetime per library', xlab = "Libraries", ylab = "Gemiddelde responsetime (in mms)", names.arg = c("Ageitgey facerecognition","Keras + Dlib + OpenCV"), ylim = c(0,10000))
text(x=bplt, y=data, label=data, pos=1)
library(ggplot2)
face <- c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized))
kairos <- c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized))
microsoft <- c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized))
SkyBiometry <- c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
microsoftTrained <- c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized))
data <- c(mean(face), mean(kairos), mean(microsoft), mean(microsoftTrained), mean(SkyBiometry))
boxplot(data)
data <- c(face, kairos, microsoft)
boxplot(data)
dframe <- data.frame(acc=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized),mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized), app=c("Face++","Face++","Face++","Face++","Face++","Face++","Face++","Kairos","Kairos","Kairos","Kairos","Kairos","Kairos","Kairos"))
dframe
dframe <- data.frame(acc=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized),mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), app=c("Face++","Face++","Face++","Face++","Face++","Face++","Face++","Kairos","Kairos","Kairos","Kairos","Kairos","Kairos","Kairos"))
dframe
boxplot(x = dframe)
dframe <- data.frame('Face++'=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)
)
)
dframe
boxplot(x=dframe)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
dfframe
dframe
dframe
boxplot(dframe)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)))
)
)
dframe
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
)
)
dframe
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)))
)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)))
dframe
boxplot(x=dframe)
boxplot(x=(dframe) * 100)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)), xlab="API's", ylab="accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's")
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)), xlab="API's", ylab="accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's")
)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)), xlab="API's", ylab="accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's")
)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)), xlab="API's", main="Spreiding gemiddelde accuraatheid API's")
)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)))
)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)))
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized)), xlab="API's", main="Spreiding gemiddelde accuraatheid API's")
boxplot(x=(dframe) * 100)
dframe <- data.frame("Face++"=c(mean(FACEPP_ATTRIBUTES2_RESULTS$recognized), mean(FACEPP_ATTRIBUTES_RESULTS$recognized), mean(FACEPP_DARKER_RESULTS$recognized), mean(FACEPP_DISTANCE_RESULTS$recognized), mean(FACEPP_NORMAL_RESULTS$recognized), mean(FACEPP_SIDE_RESULTS$recognized), mean(FACEPP_TIME_RESULTS$recognized)), 'Kairos'=c(mean(KAIROS_ATTRIBUTES2_RESULTS$recognized), mean(KAIROS_ATTRIBUTES_RESULTS$recognized), mean(KAIROS_DARKER_RESULTS$recognized), mean(KAIROS_DISTANCE_RESULTS$recognized), mean(KAIROS_NORMAL_RESULTS$recognized), mean(KAIROS_SIDE_RESULTS$recognized), mean(KAIROS_TIME_RESULTS$recognized)), Microsoft=c(mean(MICROSOFT_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFT_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFT_DARKER_RESULTS$recognized), mean(MICROSOFT_DISTANCE_RESULTS$recognized), mean(MICROSOFT_NORMAL_RESULTS$recognized), mean(MICROSOFT_SIDE_RESULTS$recognized), mean(MICROSOFT_TIME_RESULTS$recognized)),"Microsoft getraind"=c(mean(MICROSOFTTRAINED_ATTRIBUTES2_RESULTS$recognized), mean(MICROSOFTTRAINED_ATTRIBUTES_RESULTS$recognized), mean(MICROSOFTTRAINED_DARKER_RESULTS$recognized), mean(MICROSOFTTRAINED_DISTANCE_RESULTS$recognized), mean(MICROSOFTTRAINED_NORMAL_RESULTS$recognized), mean(MICROSOFTTRAINED_SIDE_RESULTS$recognized), mean(MICROSOFTTRAINED_TIME_RESULTS$recognized)),"SkyBiometry"=c(mean(SKYBIOMETRY_ATTRIBUTES2_RESULTS$recognized), mean(SKYBIOMETRY_ATTRIBUTES_RESULTS$recognized), mean(SKYBIOMETRY_DARKER_RESULTS$recognized), mean(SKYBIOMETRY_DISTANCE_RESULTS$recognized), mean(SKYBIOMETRY_NORMAL_RESULTS$recognized), mean(SKYBIOMETRY_SIDE_RESULTS$recognized), mean(SKYBIOMETRY_TIME_RESULTS$recognized))
)
boxplot(x=(dframe) * 100, xlab="API's", ylab="gemiddelde accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's")
boxplot(x=(dframe) * 100, xlab="API's", ylab="gemiddelde accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's", names=('Face++', 'Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'))
boxplot(x=(dframe) * 100, xlab="API's", ylab="gemiddelde accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's", names=c('Face++', 'Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'))
boxplot(x=(dframe) * 100, xlab="API's", ylab="gemiddelde accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's", names=c('Face++', 'Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), ylim=(0,100))
boxplot(x=(dframe) * 100, xlab="API's", ylab="gemiddelde accuraatheid (in %)", main="Spreiding gemiddelde accuraatheid API's", names=c('Face++', 'Kairos', 'Microsoft', 'Microsoft getraind', 'SkyBiometry'), ylim=c(0,100))
